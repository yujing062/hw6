1.
close all
clc
clear
[I,map]=imread('C:\Users\ywj5022\Desktop\6\lena.bmp');
figure(1);
subplot(2,3,1)
imshow(I);
title('原图');
subplot(2,3,2)
I1=imnoise(I,'gaussian',0,0.01);
imshow(I1);
title('gaussian噪声(0 0.01)');
I2=imnoise(I,'gaussian',0,0.05);
subplot(2,3,3)
imshow(I2);
title('gaussian噪声(0 0.05)');
I3=imnoise(I,'gaussian',0,0.1);
subplot(2,3,4)
imshow(I3);
title('gaussian噪声(0 0.1)');
I4=imnoise(I,'gaussian',0.1,0.01);
subplot(2,3,5)
imshow(I4);
title('gaussian噪声(0.1 0.01)');
I5=imnoise(I,'gaussian',0.5,0.01);
subplot(2,3,6)
imshow(I5);
title('gaussian噪声(0.5 0.01)');


%高斯噪声图像复原
lose all; clear all; clc;  
I=imread('lena.bmp'); 
g=imnoise(I,'gaussian',0,0.01); 
figure(1) 
subplot(1,2,1);imshow(I);title('lena'); 
subplot(1,2,2);imshow(g);title('lena+gaussian'); 
[x,y]=size(I);  
I=double(I); 
A=zeros(x+8,y+8); 
A(1,5:y+4)=I(1,:);
A(2,5:y+4)=I(1,:); 
A(3,5:y+4)=I(1,:); 
A(4,5:y+4)=I(1,:); 
A(x+5,5:y+4)=I(x,:); 
A(x+6,5:y+4)=I(x,:);
A(x+7,5:y+4)=I(x,:); 
A(x+8,5:y+4)=I(x,:);
A(5:x+4,5:y+4)=I; 
A(:,1)=A(:,5); 
A(:,2)=A(:,5); 
A(:,3)=A(:,5); 
A(:,4)=A(:,5); 
A(:,y+5)=A(:,y+4); 
A(:,y+6)=A(:,y+4); 
A(:,y+7)=A(:,y+4); 
A(:,y+8)=A(:,y+4); 
%几何均值滤波器5*5 
A2=zeros(x+8,y+8); 
for i=3:x+6  
    for j=3:y+6
       B2=A(i-2:i+2,j-2:j+2);   
m2=prod(prod(B2))^0.04;  
A2(i,j)=m2;  
    end
end
I2=A2(5:x+4,5:y+4); 
I2=uint8(I2); 
%谐波均值滤波器5*5 
A3=zeros(x+8,y+8); 
for i=3:x+6  
    for j=3:y+6
        B3=A(i-2:i+2,j-2:j+2);   
B3=1./B3; 
 m3=25/(sum((sum(B3))'));  
A3(i,j)=m3;  
    end
end
II3=A3(5:x+4,5:y+4); 
I3=255.*II3./max(max(II3)); I3=uint8(I3); 
%算术均值滤波器5*5 
A1=zeros(x+8,y+8); 
for i=3:x+6  
    for j=3:y+6
B1=A(i-2:i+2,j-2:j+2);  
m1=sum((sum(B1))')/25;  
A1(i,j)=m1;  
   end
end
I1=A1(5:x+4,5:y+4); 
I1=uint8(I1); 
%逆谐波均值滤波器5*5 
Q=1; 
A4=zeros(x+8,y+8); 
for i=3:x+6  
    for j=3:y+6
        B4=A(i-2:i+2,j-2:j+2);  
 m4=((sum(sum(B4.^(Q+1)))'))/((sum(sum(B4.^Q))'));  
A4(i,j)=m4;  
    end
end
II4=A4(5:x+4,5:y+4); 
I4=255.*II4./max(max(II4)); 
I4=uint8(I4); 
figure(2) 
subplot(2,2,1);imshow(I1); title('算术均值滤波'); 
subplot(2,2,2);imshow(I4); title('逆谐波均值滤波Q=1'); 
subplot(2,2,3);imshow(I2); title('几何均值滤波'); 
subplot(2,2,4);imshow(I3); title('谐波均值滤波'); 


2.
i=imread('C:\Users\ywj5022\Desktop\6\lena.bmp');
p22=imnoise(i,'salt & pepper',0.1);
h=medfilt2(p2);
n=5;
h1=1/n^2.*ones(n,n);
i22=conv2(double(i),double(h1),'same');
i22=uint8(i2);


figure(1);
subplot(2,2,1)
imshow(p22);
title('加入椒盐噪声的图')
subplot(2,2,2)
imshow(h);
title('拉普拉斯滤波')
subplot(2,2,3)
imshow(i22);
title('均值滤波')



3.
%维纳滤波器
function  output=weinaa(img,G_freq,H,K)%返回滤波后图像空域的数据
[Row,Col]=size(img);
F_freq=(conj(H)./(H.*conj(H)+K)).*G_freq;
output=output(1:Row,1:Col);
output=real(ifft2(F_freq));
end

%约束最小二乘滤波器
function output=yueshuu(img,H,mean,var)
[Row,Col]=size(img);
cal=(Row/2)*(Col/2)*(mean^2+var);
T=fft2([0,-1,0;-1,4,-1;0,-1,0],Row,Col);
alpha=0.2;
delta=0.01;
step=0.001;
while 1
    F=conj(H)./(conj(H).*H+alpha*conj(T).*T).*img;
    FF=img-H.*F;
    f=real(ifft2(FF));
    f=f(1:(Row/2),1:(Col/2));
    square=sum(f(:).^2);
    if abs(square-cal)<=delta
        break;
    elseif square<cal-delta
        alpha=alpha+step;
    else
        alpha=alpha-step;
    end
end
output=real(ifft2(F));
output=output(1:(Row/2),1:(Col/2));
end

lenaa=(imread('lena.bmp'));
img=im2double(lenaa);
[Row,Col]=size(img);
figure;
subplot(1,2,1);imshow(img);title('原图像');

[mohu_ed,H,freq]=mohu(img,Row,Col);
subplot(1,2,2)imshow(mohu_ed);title('模糊后的图像');

mean=0;%均值
var=10/(Row*Col);%方差


